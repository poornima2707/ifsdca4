{"ast":null,"code":"// Backend - Express Route for Login\nrouter.post(\"/login\", [check(\"username\", \"Username is required\").not().isEmpty(), check(\"password\", \"Password is required\").exists()], async (req, res) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({\n      errors: errors.array()\n    });\n  }\n  const {\n    username,\n    password\n  } = req.body;\n  try {\n    let user = await User.findOne({\n      username\n    });\n    if (!user) {\n      return res.status(400).json({\n        msg: \"Invalid Credentials\"\n      });\n    }\n    const isMatch = await bcrypt.compare(password, user.password);\n    if (!isMatch) {\n      return res.status(400).json({\n        msg: \"Invalid Credentials\"\n      });\n    }\n    const payload = {\n      user: {\n        id: user.id,\n        role: user.role\n      }\n    };\n    jwt.sign(payload, process.env.JWT_SECRET, {\n      expiresIn: \"5 days\"\n    }, (err, token) => {\n      if (err) throw err;\n      res.json({\n        token,\n        user: payload.user\n      });\n    });\n  } catch (err) {\n    console.error(err.message);\n    res.status(500).send(\"Server error\");\n  }\n});","map":{"version":3,"names":["router","post","check","not","isEmpty","exists","req","res","errors","validationResult","status","json","array","username","password","body","user","User","findOne","msg","isMatch","bcrypt","compare","payload","id","role","jwt","sign","process","env","JWT_SECRET","expiresIn","err","token","console","error","message","send"],"sources":["C:/Users/DELL/OneDrive/Desktop/IFSD_CA44/Library-Central-main/frontend/src/components/Login.jsx"],"sourcesContent":["// Backend - Express Route for Login\nrouter.post(\n  \"/login\",\n  [\n    check(\"username\", \"Username is required\").not().isEmpty(),\n    check(\"password\", \"Password is required\").exists(),\n  ],\n  async (req, res) => {\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      return res.status(400).json({ errors: errors.array() });\n    }\n\n    const { username, password } = req.body;\n\n    try {\n      let user = await User.findOne({ username });\n      if (!user) {\n        return res.status(400).json({ msg: \"Invalid Credentials\" });\n      }\n\n      const isMatch = await bcrypt.compare(password, user.password);\n      if (!isMatch) {\n        return res.status(400).json({ msg: \"Invalid Credentials\" });\n      }\n\n      const payload = {\n        user: {\n          id: user.id,\n          role: user.role,\n        },\n      };\n\n      jwt.sign(\n        payload,\n        process.env.JWT_SECRET,\n        { expiresIn: \"5 days\" },\n        (err, token) => {\n          if (err) throw err;\n          res.json({ token, user: payload.user });\n        }\n      );\n    } catch (err) {\n      console.error(err.message);\n      res.status(500).send(\"Server error\");\n    }\n  }\n);\n"],"mappings":"AAAA;AACAA,MAAM,CAACC,IAAI,CACT,QAAQ,EACR,CACEC,KAAK,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,EACzDF,KAAK,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAACG,MAAM,CAAC,CAAC,CACnD,EACD,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAClB,MAAMC,MAAM,GAAGC,gBAAgB,CAACH,GAAG,CAAC;EACpC,IAAI,CAACE,MAAM,CAACJ,OAAO,CAAC,CAAC,EAAE;IACrB,OAAOG,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEH,MAAM,EAAEA,MAAM,CAACI,KAAK,CAAC;IAAE,CAAC,CAAC;EACzD;EAEA,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGR,GAAG,CAACS,IAAI;EAEvC,IAAI;IACF,IAAIC,IAAI,GAAG,MAAMC,IAAI,CAACC,OAAO,CAAC;MAAEL;IAAS,CAAC,CAAC;IAC3C,IAAI,CAACG,IAAI,EAAE;MACT,OAAOT,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEQ,GAAG,EAAE;MAAsB,CAAC,CAAC;IAC7D;IAEA,MAAMC,OAAO,GAAG,MAAMC,MAAM,CAACC,OAAO,CAACR,QAAQ,EAAEE,IAAI,CAACF,QAAQ,CAAC;IAC7D,IAAI,CAACM,OAAO,EAAE;MACZ,OAAOb,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEQ,GAAG,EAAE;MAAsB,CAAC,CAAC;IAC7D;IAEA,MAAMI,OAAO,GAAG;MACdP,IAAI,EAAE;QACJQ,EAAE,EAAER,IAAI,CAACQ,EAAE;QACXC,IAAI,EAAET,IAAI,CAACS;MACb;IACF,CAAC;IAEDC,GAAG,CAACC,IAAI,CACNJ,OAAO,EACPK,OAAO,CAACC,GAAG,CAACC,UAAU,EACtB;MAAEC,SAAS,EAAE;IAAS,CAAC,EACvB,CAACC,GAAG,EAAEC,KAAK,KAAK;MACd,IAAID,GAAG,EAAE,MAAMA,GAAG;MAClBzB,GAAG,CAACI,IAAI,CAAC;QAAEsB,KAAK;QAAEjB,IAAI,EAAEO,OAAO,CAACP;MAAK,CAAC,CAAC;IACzC,CACF,CAAC;EACH,CAAC,CAAC,OAAOgB,GAAG,EAAE;IACZE,OAAO,CAACC,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;IAC1B7B,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAAC2B,IAAI,CAAC,cAAc,CAAC;EACtC;AACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}